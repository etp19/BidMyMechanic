// <auto-generated />
using System;
using BidMyMechanic.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BidMyMechanic.Entities.Migrations
{
    [DbContext(typeof(BidMyMechanicContext))]
    [Migration("20191024142043_fixBidEntity")]
    partial class fixBidEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BidMyMechanic.Entities.Entities.Bid", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("BidTimePeriod")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IssueId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("BidMyMechanic.Entities.Entities.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("IssueTrackingId")
                        .HasColumnType("int");

                    b.Property<string>("IssueType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IssueTrackingId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Issues");
                });

            modelBuilder.Entity("BidMyMechanic.Entities.Entities.IssueTracking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StatusDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("IssueTrackings");
                });

            modelBuilder.Entity("BidMyMechanic.Entities.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UHighway")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VClass")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("barrels08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city08U")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("co2TailpipeGpm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("comb08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cylinders")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("displ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("drive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("engId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eng_dscr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("feScore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fuelCost08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fuelCostA08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fuelType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fuelType1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("highway08")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("make")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trans_dscr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("year")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("youSaveSpend")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("BidMyMechanic.Entities.Entities.Bid", b =>
                {
                    b.HasOne("BidMyMechanic.Entities.Entities.Issue", "Issue")
                        .WithMany()
                        .HasForeignKey("IssueId");

                    b.HasOne("BidMyMechanic.Entities.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("BidMyMechanic.Entities.Entities.Issue", b =>
                {
                    b.HasOne("BidMyMechanic.Entities.Entities.IssueTracking", "IssueTracking")
                        .WithMany()
                        .HasForeignKey("IssueTrackingId");

                    b.HasOne("BidMyMechanic.Entities.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId");
                });
#pragma warning restore 612, 618
        }
    }
}
